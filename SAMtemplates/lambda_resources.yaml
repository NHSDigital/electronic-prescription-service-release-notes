AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Resources for a lambda

Parameters:
  LambdaName:
    Type: String
    Default: none

  LambdaArn:
    Type: String
    Default: none

  IncludeAdditionalPolicies:
    Type: String
    Default: false

  AdditionalPolicies:
    Type: CommaDelimitedList
    Description: A list of additional policies to attach the lambdas role (comma delimited).
    Default: none

  LogRetentionInDays:
    Type: Number
    AllowedValues:
      [
        1,
        3,
        5,
        7,
        14,
        30,
        60,
        90,
        120,
        150,
        180,
        365,
        400,
        545,
        731,
        1096,
        1827,
        2192,
        2557,
        2922,
        3288,
        3653,
      ]

Conditions:
  ShouldIncludeAdditionalPolicies: !Equals
    - true
    - !Ref IncludeAdditionalPolicies

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns: !Split
        - ","
        - !Join
          - ","
          - - !Ref LambdaManagedPolicy
            - !ImportValue lambda-resources:LambdaInsightsLogGroupPolicy
            - !ImportValue account-resources:CloudwatchEncryptionKMSPolicyArn
            - !ImportValue account-resources:LambdaDecryptSecretsKMSPolicy
            - !If
              - ShouldIncludeAdditionalPolicies
              - !Join
                - ","
                - !Ref AdditionalPolicies
              - !Ref AWS::NoValue

  LambdaManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !GetAtt LambdaLogGroup.Arn
              - !Sub ${LambdaLogGroup.Arn}:log-stream:*

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Metadata:
      guard:
        SuppressedRules:
          - CW_LOGGROUP_RETENTION_PERIOD_CHECK
    Properties:
      LogGroupName: !Sub /aws/lambda/${LambdaName}
      RetentionInDays: !Ref LogRetentionInDays
      KmsKeyId: !ImportValue account-resources:CloudwatchLogsKmsKeyArn

  LambdaSplunkSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      RoleArn: !ImportValue lambda-resources:SplunkSubscriptionFilterRole
      LogGroupName: !Ref LambdaLogGroup
      FilterPattern: ""
      DestinationArn: !ImportValue lambda-resources:SplunkDeliveryStream

Outputs:
  LambdaRoleArn:
    Description: LambdaRole ARN
    Value: !GetAtt LambdaRole.Arn

  LambdaRole:
    Description: "LambdaRole"
    Value: !Ref LambdaRole
