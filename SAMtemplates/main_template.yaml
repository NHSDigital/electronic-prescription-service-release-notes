AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Create release notes lambda

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 300
    MemorySize: 256
    Architectures:
      - x86_64
    Runtime: python3.11

Resources:
  CreateReleaseNotesResources:
    Type: AWS::Serverless::Application
    Properties:
      Location: lambda_resources.yaml
      Parameters:
        CloudWatchKMSKey: !GetAtt ReleaseNotesSecretsKMSKey.Arn
        SplunkSubscriptionFilterRole: "n/a"
        SplunkDeliveryStream: "n/a"
        EnableSplunk: "false"
        LambdaName: !Sub "${AWS::StackName}-createReleaseNotes"
        AccessToSpine: "false"
        LogRetentionDays: "30"

  LambdaSecretsPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "allow-access-to-atlasian-secrets"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - !ImportValue account-resources:JiraToken
              - !ImportValue account-resources:ConfluenceToken
      Roles:
        - !GetAtt CreateReleaseNotesResources.Outputs.LambdaRole

  createReleaseNotes:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-createReleaseNotes"
      CodeUri: ../create_release_notes
      Handler: create_release_notes.lambda_handler
      Role: !GetAtt CreateReleaseNotesResources.Outputs.LambdaRoleArn
      Environment:
        Variables:
          GITHUB_TOKEN: GITHUB_TOKEN


  ReleaseNotesSecretsKMSKey:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Join
                - ""
                - - "arn:aws:iam::"
                  - !Ref "AWS::AccountId"
                  - ":root"
            Action: "kms:*"
            Resource: "*"
          - Sid: Allow Lambda logging
            Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: "*"
            Condition:
              ArnEquals:
                kms:EncryptionContext:aws:logs:arn: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*"

  LambdaExecutionPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Sub "${AWS::StackName}-allow-execution-of-release-notes-lambda"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource:
              - !GetAtt createReleaseNotes.Arn
      Roles:
        - !ImportValue ci-resources:CloudFormationDeployRoleName

Outputs:
  CreateReleaseNotesLambdaName:
    Description: Name of the create release notes lambda
    Value: !Ref createReleaseNotes
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", "CreateReleaseNotesLambdaName"]]
