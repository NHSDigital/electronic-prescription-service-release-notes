name: sam release code

on:
  workflow_call:
    inputs:
      STACK_NAME:
        required: true
        type: string
      ARTIFACT_BUCKET_PREFIX:
        required: true
        type: string
      BUILD_ARTIFACT:
        required: true
        type: string
      VERSION_NUMBER:
        required: true
        type: string
      COMMIT_ID:
        required: false
        type: string
    secrets:
      CLOUD_FORMATION_DEPLOY_ROLE:
        required: true
      PAT_GITHUB_TOKEN:
        required: true

jobs:
  sam_release_code:
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.CLOUD_FORMATION_DEPLOY_ROLE }}
          role-session-name: release-notes-repo-releaese-code

      - uses: actions/download-artifact@v6
        name: download build artifact
        with:
          name: ${{ inputs.BUILD_ARTIFACT }}
          path: .aws-sam/build

      - shell: bash
        name: release code
        run: |
          echo ${{ inputs.COMMIT_ID }}
          artifact_bucket=$(aws cloudformation list-exports --output json | \
            jq -r '.Exports[] | select(.Name == "account-resources:ArtifactsBucket") | .Value' |grep -o '[^:]*$')
          export artifact_bucket

          artifact_bucket_prefix=release_notes/${{ inputs.ARTIFACT_BUCKET_PREFIX }}
          export artifact_bucket_prefix

          export template_file=template.yaml
          export stack_name=${{ inputs.STACK_NAME }}
          export VERSION_NUMBER=${{ inputs.VERSION_NUMBER }}
          export PAT_GITHUB_TOKEN=${{ secrets.PAT_GITHUB_TOKEN }}

          cloud_formation_execution_role=$(aws cloudformation list-exports --output json | \
              jq -r '.Exports[] | select(.Name == "ci-resources:CloudFormationExecutionRole") | .Value' )
          export cloud_formation_execution_role

              cd .aws-sam/build
          make sam-deploy-package
